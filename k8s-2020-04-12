持久化存储

    卷的服务
         解决的问题:为了将pod内部的容器持久化存储，并让pod内部的容器共享资源


   可使用卷的类型

       1, emptyDir:用于存储临时数据的简单空目录
       2, hostPath:用于将目录从工作节点的文件系统挂载到pod中
       3, gitRepo:通过检出Git仓库的内容来初始化的卷
       4, nfs:挂载到pod中的NFS共享卷




配置容器化的应用
三种方式
	第一种:以命令行的形式将参数传递给docker里面的应用程序
	第二种:通过在创建pod里面的容器的时候注入环境变量的信息
		2.1直接以 -  name
		                  - value的形式的向容器中传入环境变量
		同时还支持引用其他容器里面的环境变量
		例子:
		name: FIRST_VAR
		value:"wxm"
		name:SECOND_VAR
		value:"${FIRST_VAR}"(通过${变量名称})来引用上面提到的变量

	第三种方式:通过configmap将配置写道容器应用中
	创建configmap
		1 kubectl create configmap configmap_name --from-literal=key=value
	获取configmap的清单
		kubectl get configmap configmap_name -o yaml
	通过手动创建ConfigMap的条目
		kubectl create configmap configmap_name --from-file=filename(会在当前的路径下面查找该文件并且生成以文件名称为健的条目)
	通过手动创建ConfigMap的条目
		kubectl create configmap configmap_name --from-file=key=filename
	通过执行创建的configmap来自目录来为该目录下面的所有
